{"version":3,"sources":["components/Main.js","components/Nutrition.js","components/My.js","App.js","index.js","stores/FoodStore.js"],"names":["getData","food","a","axios","get","Main","inject","observer","handleSubmit","e","preventDefault","console","log","target","search","value","then","result","correctFoods","data","I2790","row","filter","DESC_KOR","length","window","alert","GROUP_NAME","SUB_REF_NAME","SERVING_SIZE","NUTR_CONT1","NUTR_CONT2","NUTR_CONT3","NUTR_CONT4","NUTR_CONT5","NUTR_CONT6","props","foodStore","addFood","group_name","food_name","result_from","serving_size","kcal","carbo","pro","fat","sugar","salt","checked","catch","failed","changePage","id","noValidate","autoComplete","onSubmit","this","class","TextField","name","label","variant","IconButton","style","padding","type","width","height","React","Component","Nutrition","checkEachFood","renewalFood","foods","map","resetFood","state","className","index","Checkbox","onChange","color","inputProps","onClick","position","top","right","Button","border","fontSize","fontWeight","My","checkedFoods","setState","getCalories","App","page","currentPage","observable","action","calories","Number","parseInt","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1bfc797.chunk.js","sourcesContent":["import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { TextField, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport axios from 'axios';\r\nimport '../styles/Main.css'\r\n\r\nconst getData = async (food) => {\r\n  return await axios.get(`http://openapi.foodsafetykorea.go.kr/api/dfa1a00161e84b9c912a/I2790/json/1/5/DESC_KOR=${food}`)\r\n}\r\n\r\n@inject('foodStore')\r\n@observer\r\nclass Main extends React.Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.search.value)\r\n    getData(e.target.search.value).then(result => {\r\n\r\n      const correctFoods = result.data.I2790.row.filter((food) => food.DESC_KOR === e.target.search.value)\r\n\r\n      if (!correctFoods.length) {\r\n        console.log(\"정의안댐!\")\r\n        window.alert(\"없는 음식입니다.\")\r\n        return;\r\n      }\r\n\r\n      const {\r\n        GROUP_NAME,\r\n        DESC_KOR,\r\n        SUB_REF_NAME,\r\n        SERVING_SIZE,\r\n        NUTR_CONT1,\r\n        NUTR_CONT2,\r\n        NUTR_CONT3,\r\n        NUTR_CONT4,\r\n        NUTR_CONT5,\r\n        NUTR_CONT6\r\n      } = correctFoods[0]\r\n\r\n      this.props.foodStore.addFood({\r\n        group_name: GROUP_NAME,\r\n        food_name: DESC_KOR,\r\n        result_from: SUB_REF_NAME,\r\n        serving_size: SERVING_SIZE,\r\n        kcal: NUTR_CONT1,\r\n        carbo: NUTR_CONT2,\r\n        pro: NUTR_CONT3,\r\n        fat: NUTR_CONT4,\r\n        sugar: NUTR_CONT5,\r\n        salt: NUTR_CONT6,\r\n        checked: false\r\n      })\r\n    })\r\n      .catch(failed => console.log(failed))\r\n    this.props.changePage(1)\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"container\"> \r\n      <form noValidate autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n        <h3>\" 영양성분이 궁금한 음식을 검색하세요. \" </h3> <br />\r\n        <div class=\"search_part\">\r\n          <TextField name=\"search\" id=\"outlined-basic\" label=\"Search\" variant=\"outlined\" />\r\n          <IconButton style={{ padding: 0 }} type=\"submit\">\r\n            <SearchIcon style={{ width: 56, height: 56 }} />\r\n          </IconButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nexport default Main","import React from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Button , IconButton, Checkbox, coral  } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport '../styles/Nutrition.css'\r\n\r\n@inject('foodStore')\r\n@observer\r\nclass Nutrition extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n\r\n  checkEachFood = (food_name) => {\r\n\r\n    const renewalFood = this.props.foodStore.foods.map((food) => {\r\n      if(food.food_name == food_name){\r\n        return {\r\n          ...food,\r\n          checked: !food.checked\r\n        }\r\n      }else{\r\n        return {\r\n          ...food\r\n        }\r\n      }\r\n    })\r\n\r\n    this.props.foodStore.resetFood(renewalFood)\r\n    console.log(renewalFood)\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return <div>\r\n      <h1 className=\"header\">영양 성분</h1>\r\n      <div className=\"searched_food_container\">\r\n          {this.props.foodStore.foods.map((food, index) => {\r\n            return <div key={index} className=\"each_food\">\r\n              <h2><Checkbox\r\n                checked={food.checked}\r\n                onChange={() => this.checkEachFood(food.food_name)}\r\n                label=\"Custom color\"\r\n                color=\"coral\"\r\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n              />{food.food_name}</h2>\r\n              <div className=\"discrip_part\">\r\n                <p>칼로리 : {food.kcal ? food.kcal : '0'} kcal / {food.serving_size} g</p>\r\n                <p>탄수화물 : {food.carbo ? food.carbo : '0'} g</p>\r\n                <p>단백질 : {food.pro ? food.pro : '0'} g</p>\r\n                <p>지방 : {food.fat ? food.fat : '0'} g</p>\r\n                <p>당 : {food.sugar ? food.sugar : '0'} g</p>\r\n                <p>나트륨 : {food.salt ? food.salt : '0'} g</p>\r\n                {/* <p>출처 : {food.result_from}</p> */}\r\n              </div>\r\n              </div>\r\n          })}\r\n      </div>\r\n      <IconButton onClick={() => this.props.changePage(0)} style={{ padding: 0, position:'fixed', top:16, right:86 }}>\r\n        <SearchIcon style={{ width: 56, height: 56 }} />\r\n      </IconButton>\r\n      <Button \r\n          style={{width:56, height:56, border: '0.3px solid lightgray', fontSize: 18, fontWeight:'bold', padding: 0, position: 'fixed', right:16, top:16 }}\r\n          onClick={() => this.props.changePage(2)} >\r\n          MY\r\n      </Button>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Nutrition\r\n\r\n//http://openapi.foodsafetykorea.go.kr/api/dfa1a00161e84b9c912a/I2790/json/1/5/DESC_KOR=가자미구이","import React from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Button , IconButton  } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport '../styles/My.css'\r\n\r\n@inject('foodStore')\r\n@observer\r\nclass My extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      checkedFoods : []\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    const checkedFoods = this.props.foodStore.foods.filter((food) => {\r\n      return food.checked\r\n    })\r\n    console.log(checkedFoods)\r\n    this.setState({\r\n      checkedFoods:checkedFoods\r\n    })\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h1 className=\"header\">영양 성분</h1>\r\n      <IconButton onClick={() => this.props.changePage(0)} style={{ padding: 0, position:'fixed', top:16, right:86 }}>\r\n        <SearchIcon style={{ width: 56, height: 56 }} />\r\n      </IconButton>\r\n      <Button \r\n          style={{width:56, height:56, border: '0.3px solid lightgray', fontSize: 18, fontWeight:'bold', padding: 0, position: 'fixed', right:16, top:16 }}\r\n          onClick={() => this.props.changePage(1)} >\r\n          BACK\r\n      </Button>\r\n      <div class=\"selected_food_container\">\r\n      {this.state.checkedFoods.map((food, index) => {\r\n        return <div key={index} class=\"selected_food\">\r\n          <h2>{food.food_name}</h2>\r\n          <div class=\"discrip_part\">\r\n            <p>칼로리 : {food.kcal ? food.kcal : '0'} kcal / {food.serving_size} g</p>\r\n            <p>탄수화물 : {food.carbo ? food.carbo : '0'} g</p>\r\n            <p>단백질 : {food.pro ? food.pro : '0'} g</p>\r\n            <p>지방 : {food.fat ? food.fat : '0'} g</p>\r\n            <p>당 : {food.sugar ? food.sugar : '0'} g</p>\r\n            <p>나트륨 : {food.salt ? food.salt : '0'} g</p>\r\n          </div>\r\n        </div>\r\n      })}\r\n      </div>\r\n      <h3 className=\"total\">총 칼로리 :  {this.props.foodStore.getCalories()} kcal</h3>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default My;","import React from 'react';\r\nimport Main from './components/Main'\r\nimport Nutrition from './components/Nutrition'\r\nimport My from './components/My'\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      currentPage : 0\r\n    }\r\n  }\r\n\r\n  changePage = (page) => {\r\n    this.setState({\r\n      currentPage: page\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { currentPage } = this.state\r\n    return (<div>\r\n      {currentPage == 0 && <Main changePage={this.changePage} />}\r\n      {currentPage == 1 && <Nutrition changePage={this.changePage} />}\r\n      {currentPage == 2 && <My changePage={this.changePage} />}\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'mobx-react'\r\nimport FoodStore from './stores/FoodStore'\r\n\r\nconst foodStore = new FoodStore()\r\n\r\nReactDOM.render(\r\n  <Provider foodStore={foodStore}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);","import { observable, action } from 'mobx'\r\n\r\nexport default class FoodStore{\r\n  @observable foods = [];\r\n  @observable calories= 0;\r\n\r\n\r\n  @action\r\n  resetFood = (foods) => {\r\n    this.calories = 0;\r\n    foods.map((food) => {\r\n      if(food.checked) this.calories += Number.parseInt(food.kcal)\r\n    })\r\n    console.log(this.calories)\r\n    this.foods = foods\r\n  }\r\n\r\n  @action\r\n  addFood = (food) => {\r\n    this.foods.push(food)\r\n    //this.calories += Number.parseInt(food.kcal)\r\n  }\r\n\r\n  @action\r\n  getCalories = () => {\r\n    return this.calories\r\n  }\r\n}"],"sourceRoot":""}